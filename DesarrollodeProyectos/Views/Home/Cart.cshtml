@model DesarrollodeProyectos.Models.Cart

<div class="container mt-4">
    <h2 class="mb-4 text-center">Carrito de Compras</h2>

    @if (Model != null && Model.CartItems != null && Model.CartItems.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th>Imagen</th>
                        <th>Producto</th>
                        <th>Cantidad</th>
                        <th>Precio</th>
                        <th>Total</th>
                        <th>Stock Disponible</th> <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.CartItems)
                    {
                        <tr data-cart-item-id="@item.Id" data-price="@item.Price" data-stock="@item.AvailableStock">
                            <td>
                                @if (item.ProductType == "Shirt" && item.Shirt != null)
                                {
                                    <img src="@item.Shirt.ImageUrl" alt="@item.Shirt.Name" style="max-width: 80px; max-height: 80px;" />
                                }
                                @if (item.ProductType == "Cap" && item.Cap != null)
                                {
                                    <img src="@item.Cap.ImageUrl" alt="@item.Cap.Name" style="max-width: 80px; max-height: 80px;" />
                                }
                                @if (item.ProductType == "Sweater" && item.Sweater != null)
                                {
                                    <img src="@item.Sweater.ImageUrl" alt="@item.Sweater.Name" style="max-width: 80px; max-height: 80px;" />
                                }
                            </td>
                            <td>
                                @if (item.ProductType == "Shirt") { @item.Shirt?.Name }
                                @if (item.ProductType == "Cap") { @item.Cap?.Name }
                                @if (item.ProductType == "Sweater") { @item.Sweater?.Name }
                            </td>
                            <td>
                                <input type="number" class="quantity-input form-control form-control-sm" value="@item.Quantity" min="1" />
                                <div class="quantity-error text-danger" style="display: none;"></div>
                            </td>
                            <td class="price-cell">@item.Price.ToString("C")</td>
                            <td class="total-cell">@item.TotalPrice.ToString("C")</td>
                            <td class="stock-cell">@item.AvailableStock</td> <td>
                                <form asp-action="RemoveCartItem" method="post" class="form-inline">
                                    <input type="hidden" name="cartItemId" value="@item.Id" />
                                    <button type="submit" class="btn btn-danger btn-sm">Eliminar</button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="mt-3 text-right">
            <h4 class="font-weight-bold">
                Su total a pagar es:
                <span id="totalAmount">
                    @Model.CartItems.Sum(item => item.TotalPrice).ToString("C")
                </span>
            </h4>
        </div>

        <div class="text-right">
            <form asp-action="Checkout" method="post" id="checkoutForm">
                <button type="submit" class="btn btn-success">Realizar Pedido</button>
            </form>
        </div>
    }
    else
    {
        <p class="text-muted text-center">El carrito está vacío.</p>
    }
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const quantityInputs = document.querySelectorAll('.quantity-input');

        quantityInputs.forEach(input => {
            input.addEventListener('change', function () {
                const row = this.closest('tr');
                const cartItemId = row.dataset.cartItemId;
                const price = parseFloat(row.dataset.price);
                const quantity = parseInt(this.value);
                const stock = parseInt(row.dataset.stock);
                const errorDiv = row.querySelector('.quantity-error');

                if (isNaN(quantity) || quantity < 1) {
                    errorDiv.textContent = 'Cantidad inválida.';
                    errorDiv.style.display = 'block';
                    this.value = 1;
                    return;
                }

                if (quantity > stock) {
                    errorDiv.textContent = 'Stock insuficiente.';
                    errorDiv.style.display = 'block';
                    this.value = stock;
                    return;
                }

                errorDiv.style.display = 'none';

                const total = price * quantity;
                row.querySelector('.total-cell').textContent = total.toLocaleString('en-US', { style: 'currency', currency: 'USD' });

                fetch('/Cart/UpdateCartItem', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `cartItemId=${cartItemId}&quantity=${quantity}`,
                })
                .then(response => {
                    if (!response.ok) {
                        console.error('Error al actualizar el carrito');
                    }
                })
                .catch(error => {
                    console.error('Error de red:', error);
                });

                updateTotal();
            });
        });

        function updateTotal() {
            const totalAmountElement = document.getElementById('totalAmount');
            let totalAmount = 0;
            document.querySelectorAll('.total-cell').forEach(cell => {
                totalAmount += parseFloat(cell.textContent.replace(/[^0-9.-]+/g, ""));
            });
            totalAmountElement.textContent = totalAmount.toLocaleString('en-US', { style: 'currency', currency: 'USD' });
        }

        document.getElementById('checkoutForm').addEventListener('submit', function (event) {
            let isValid = true;
            document.querySelectorAll('tr[data-cart-item-id]').forEach(row => {
                const quantityInput = row.querySelector('.quantity-input');
                const quantity = parseInt(quantityInput.value);
                const stock = parseInt(row.dataset.stock);
                const errorDiv = row.querySelector('.quantity-error');

                if (isNaN(quantity) || quantity < 1) {
                    errorDiv.textContent = 'Cantidad inválida.';
                    errorDiv.style.display = 'block';
                    isValid = false;
                } else if (quantity > stock) {
                    errorDiv.textContent = 'Stock insuficiente.';
                    errorDiv.style.display = 'block';
                    isValid = false;
                } else {
                    errorDiv.style.display = 'none';
                }
            });

            if (!isValid) {
                event.preventDefault();
            }
        });
    });
</script>